calcite:
  logical: |
    LogicalSystemLimit(fetch=[10000], type=[QUERY_SIZE_LIMIT])
      LogicalProject(avg(balance)=[ROUND($1, 2)], state=[$0])
        LogicalAggregate(group=[{0}], avg(balance)=[AVG($1)])
          LogicalProject(state=[$7], balance=[$3])
            LogicalSort(sort0=[$3], sort1=[$8], dir0=[ASC-nulls-first], dir1=[ASC-nulls-first])
              CalciteLogicalIndexScan(table=[[OpenSearch, opensearch-sql_test_index_account]])
  physical: |
    EnumerableCalc(expr#0..1=[{inputs}], expr#2=[2], expr#3=[ROUND($t1, $t2)], avg(balance)=[$t3], state=[$t0])
      CalciteEnumerableIndexScan(table=[[OpenSearch, opensearch-sql_test_index_account]], PushDownContext=[[PROJECT->[balance, state, age], AGGREGATION->rel#:LogicalAggregate.NONE.[](input=RelSubset#,group={0},avg(balance)=AVG($1)), LIMIT->10000], OpenSearchRequestBuilder(sourceBuilder={"from":0,"size":0,"timeout":"1m","_source":{"includes":["balance","state","age"],"excludes":[]},"aggregations":{"composite_buckets":{"composite":{"size":1000,"sources":[{"state":{"terms":{"field":"state.keyword","missing_bucket":true,"missing_order":"first","order":"asc"}}}]},"aggregations":{"avg(balance)":{"avg":{"field":"balance"}}}}}}, requestedTotalSize=2147483647, pageSize=null, startFrom=0)])
