calcite:
  logical: |
    LogicalSystemLimit(fetch=[10000], type=[QUERY_SIZE_LIMIT])
      LogicalProject(avg_age=[$1], age_range=[$0])
        LogicalAggregate(group=[{0}], avg_age=[AVG($1)])
          LogicalProject(age_range=[CASE(<($10, 30), 'u30':VARCHAR, SEARCH($10, Sarg[[30..40]]), 'u40':VARCHAR, 'u100':VARCHAR)], age=[$10])
            CalciteLogicalIndexScan(table=[[OpenSearch, opensearch-sql_test_index_bank]])
  physical: |
    EnumerableLimit(fetch=[10000])
      EnumerableCalc(expr#0..2=[{inputs}], expr#3=[0], expr#4=[=($t2, $t3)], expr#5=[null:BIGINT], expr#6=[CASE($t4, $t5, $t1)], expr#7=[CAST($t6):DOUBLE], expr#8=[/($t7, $t2)], avg_age=[$t8], age_range=[$t0])
        EnumerableAggregate(group=[{0}], agg#0=[$SUM0($1)], agg#1=[COUNT($1)])
          EnumerableCalc(expr#0=[{inputs}], expr#1=[30], expr#2=[<($t0, $t1)], expr#3=['u30':VARCHAR], expr#4=[Sarg[[30..40]]], expr#5=[SEARCH($t0, $t4)], expr#6=['u40':VARCHAR], expr#7=['u100':VARCHAR], expr#8=[CASE($t2, $t3, $t5, $t6, $t7)], $f0=[$t8], age=[$t0])
            CalciteEnumerableIndexScan(table=[[OpenSearch, opensearch-sql_test_index_bank]], PushDownContext=[[PROJECT->[age]], OpenSearchRequestBuilder(sourceBuilder={"from":0,"timeout":"1m","_source":{"includes":["age"],"excludes":[]}}, requestedTotalSize=2147483647, pageSize=null, startFrom=0)])
