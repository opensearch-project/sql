calcite:
  logical: |
    LogicalSystemLimit(fetch=[10000], type=[QUERY_SIZE_LIMIT])
      LogicalProject(variablesSet=[[$cor0]], id=[$2], name=[$0], count_dept=[$SCALAR_QUERY({
    LogicalAggregate(group=[{}], count(name)=[COUNT($0)])
      LogicalProject(name=[$0])
        LogicalFilter(condition=[IS NOT NULL($0)])
          LogicalFilter(condition=[=($cor0.id, $1)])
            CalciteLogicalIndexScan(table=[[OpenSearch, opensearch-sql_test_index_work_information]])
    })])
        CalciteLogicalIndexScan(table=[[OpenSearch, opensearch-sql_test_index_worker]])
  physical: |
    EnumerableCalc(expr#0..3=[{inputs}], expr#4=[IS NULL($t3)], expr#5=[0:BIGINT], expr#6=[CASE($t4, $t5, $t3)], id=[$t1], name=[$t0], count_dept=[$t6])
      EnumerableLimit(fetch=[10000])
        EnumerableMergeJoin(condition=[=($1, $2)], joinType=[left])
          EnumerableSort(sort0=[$1], dir0=[ASC])
            EnumerableCalc(expr#0..10=[{inputs}], name=[$t0], id=[$t2])
              CalciteEnumerableIndexScan(table=[[OpenSearch, opensearch-sql_test_index_worker]])
          EnumerableSort(sort0=[$0], dir0=[ASC])
            EnumerableAggregate(group=[{1}], count(name)=[COUNT($0)])
              EnumerableCalc(expr#0..9=[{inputs}], expr#10=[IS NOT NULL($t1)], expr#11=[IS NOT NULL($t0)], expr#12=[AND($t10, $t11)], proj#0..9=[{exprs}], $condition=[$t12])
                CalciteEnumerableIndexScan(table=[[OpenSearch, opensearch-sql_test_index_work_information]])