calcite:
  logical: |
    LogicalSystemLimit(fetch=[10000], type=[QUERY_SIZE_LIMIT])
      LogicalProject(count()=[$2], @timestamp=[$3], region=[$1])
        LogicalAggregate(group=[{0, 1}], count()=[COUNT()], @timestamp=[MIN($2)])
          LogicalProject(@timestamp_bin=[$16], region=[$8], @timestamp=[$1])
            LogicalFilter(condition=[AND(IS NOT NULL($1), IS NOT NULL($8))])
              LogicalProject(environment=[$0], @timestamp=[$1], status_code=[$2], service=[$3], host=[$4], memory_usage=[$5], response_time=[$6], cpu_usage=[$7], region=[$8], bytes_sent=[$9], _id=[$10], _index=[$11], _score=[$12], _maxscore=[$13], _sort=[$14], _routing=[$15], @timestamp_bin=[WIDTH_BUCKET($1, 3, MIN($1) OVER (), MAX($1) OVER ())])
                CalciteLogicalIndexScan(table=[[OpenSearch, events]])
  physical: |
    EnumerableLimit(fetch=[10000])
      EnumerableCalc(expr#0..3=[{inputs}], count()=[$t2], @timestamp=[$t3], region=[$t0])
        EnumerableAggregate(group=[{1, 2}], count()=[COUNT()], @timestamp=[MIN($0)])
          EnumerableCalc(expr#0..3=[{inputs}], expr#4=[3], expr#5=[WIDTH_BUCKET($t0, $t4, $t2, $t3)], expr#6=[IS NOT NULL($t0)], expr#7=[IS NOT NULL($t1)], expr#8=[AND($t6, $t7)], proj#0..1=[{exprs}], @timestamp_bin=[$t5], $condition=[$t8])
            EnumerableWindow(window#0=[window(aggs [MIN($0), MAX($0)])])
              CalciteEnumerableIndexScan(table=[[OpenSearch, events]], PushDownContext=[[PROJECT->[@timestamp, region]], OpenSearchRequestBuilder(sourceBuilder={"from":0,"timeout":"1m","_source":{"includes":["@timestamp","region"],"excludes":[]}}, requestedTotalSize=2147483647, pageSize=null, startFrom=0)])