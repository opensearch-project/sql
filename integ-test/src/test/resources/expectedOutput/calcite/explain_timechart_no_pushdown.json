{
  "calcite": {
    "logical": "LogicalSystemLimit(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC], fetch=[10000], type=[QUERY_SIZE_LIMIT])\n  LogicalSort(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC])\n    LogicalAggregate(group=[{0, 1}], avg(cpu_usage)=[SUM($2)])\n      LogicalProject(@timestamp=[$1], host=[CASE(IS NOT NULL($3), $0, 'OTHER')], avg(cpu_usage)=[$2])\n        LogicalJoin(condition=[=($0, $3)], joinType=[left])\n          LogicalAggregate(group=[{0, 2}], agg#0=[AVG($1)])\n            LogicalProject(host=[$0], cpu_usage=[$2], $f3=[SPAN($1, 1, 'm')])\n              CalciteLogicalIndexScan(table=[[OpenSearch, events]])\n          LogicalSort(sort0=[$1], dir0=[DESC], fetch=[10])\n            LogicalAggregate(group=[{0}], grand_total=[SUM($2)])\n              LogicalAggregate(group=[{0, 2}], agg#0=[AVG($1)])\n                LogicalProject(host=[$0], cpu_usage=[$2], $f3=[SPAN($1, 1, 'm')])\n                  CalciteLogicalIndexScan(table=[[OpenSearch, events]])\n",
    "physical": "EnumerableLimit(fetch=[10000])\n  EnumerableSort(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC])\n    EnumerableAggregate(group=[{0, 1}], avg(cpu_usage)=[SUM($2)])\n      EnumerableCalc(expr#0..4=[{inputs}], expr#5=[IS NOT NULL($t3)], expr#6=['OTHER'], expr#7=[CASE($t5, $t0, $t6)], @timestamp=[$t1], host=[$t7], avg(cpu_usage)=[$t2])\n        EnumerableMergeJoin(condition=[=($0, $3)], joinType=[left])\n          EnumerableSort(sort0=[$0], dir0=[ASC])\n            EnumerableCalc(expr#0..3=[{inputs}], expr#4=[0], expr#5=[=($t3, $t4)], expr#6=[null:DOUBLE], expr#7=[CASE($t5, $t6, $t2)], expr#8=[CAST($t7):REAL], expr#9=[/($t8, $t3)], proj#0..1=[{exprs}], $f2=[$t9])\n              EnumerableAggregate(group=[{0, 2}], agg#0=[$SUM0($1)], agg#1=[COUNT($1)])\n                EnumerableCalc(expr#0..9=[{inputs}], expr#10=[1], expr#11=['m'], expr#12=[SPAN($t1, $t10, $t11)], host=[$t0], cpu_usage=[$t2], $f3=[$t12])\n                  CalciteEnumerableIndexScan(table=[[OpenSearch, events]])\n          EnumerableSort(sort0=[$0], dir0=[ASC])\n            EnumerableLimit(fetch=[10])\n              EnumerableSort(sort0=[$1], dir0=[DESC])\n                EnumerableAggregate(group=[{0}], grand_total=[SUM($2)])\n                  EnumerableCalc(expr#0..3=[{inputs}], expr#4=[0], expr#5=[=($t3, $t4)], expr#6=[null:DOUBLE], expr#7=[CASE($t5, $t6, $t2)], expr#8=[CAST($t7):REAL], expr#9=[/($t8, $t3)], proj#0..1=[{exprs}], $f2=[$t9])\n                    EnumerableAggregate(group=[{0, 2}], agg#0=[$SUM0($1)], agg#1=[COUNT($1)])\n                      EnumerableCalc(expr#0..9=[{inputs}], expr#10=[1], expr#11=['m'], expr#12=[SPAN($t1, $t10, $t11)], host=[$t0], cpu_usage=[$t2], $f3=[$t12])\n                        CalciteEnumerableIndexScan(table=[[OpenSearch, events]])\n"
  }
}