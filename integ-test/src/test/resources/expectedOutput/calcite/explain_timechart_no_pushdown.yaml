calcite:
  logical: |
    LogicalSystemLimit(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC], fetch=[10000], type=[QUERY_SIZE_LIMIT])
      LogicalSort(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC])
        LogicalAggregate(group=[{0, 1}], avg(cpu_usage)=[SUM($2)])
          LogicalProject(@timestamp=[$0], host=[CASE(IS NOT NULL($3), $1, CASE(IS NULL($1), null:NULL, 'OTHER'))], avg(cpu_usage)=[$2])
            LogicalJoin(condition=[=($1, $3)], joinType=[left])
              LogicalProject(@timestamp=[$1], host=[$0], $f2=[$2])
                LogicalAggregate(group=[{0, 2}], agg#0=[AVG($1)])
                  LogicalProject(host=[$4], cpu_usage=[$7], $f3=[SPAN($1, 1, 'm')])
                    CalciteLogicalIndexScan(table=[[OpenSearch, events]])
              LogicalSort(sort0=[$1], dir0=[DESC], fetch=[10])
                LogicalAggregate(group=[{1}], grand_total=[SUM($2)])
                  LogicalFilter(condition=[IS NOT NULL($1)])
                    LogicalProject(@timestamp=[$1], host=[$0], $f2=[$2])
                      LogicalAggregate(group=[{0, 2}], agg#0=[AVG($1)])
                        LogicalProject(host=[$4], cpu_usage=[$7], $f3=[SPAN($1, 1, 'm')])
                          CalciteLogicalIndexScan(table=[[OpenSearch, events]])
  physical: |
    EnumerableLimit(fetch=[10000])
      EnumerableSort(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC])
        EnumerableAggregate(group=[{0, 1}], avg(cpu_usage)=[SUM($2)])
          EnumerableCalc(expr#0..4=[{inputs}], expr#5=[IS NOT NULL($t3)], expr#6=[IS NULL($t1)], expr#7=[null:NULL], expr#8=['OTHER'], expr#9=[CASE($t6, $t7, $t8)], expr#10=[CASE($t5, $t1, $t9)], @timestamp=[$t0], host=[$t10], avg(cpu_usage)=[$t2])
            EnumerableMergeJoin(condition=[=($1, $3)], joinType=[left])
              EnumerableSort(sort0=[$1], dir0=[ASC])
                EnumerableCalc(expr#0..3=[{inputs}], expr#4=[0], expr#5=[=($t3, $t4)], expr#6=[null:DOUBLE], expr#7=[CASE($t5, $t6, $t2)], expr#8=[/($t7, $t3)], @timestamp=[$t1], host=[$t0], $f2=[$t8])
                  EnumerableAggregate(group=[{0, 2}], agg#0=[$SUM0($1)], agg#1=[COUNT($1)])
                    EnumerableCalc(expr#0..15=[{inputs}], expr#16=[1], expr#17=['m'], expr#18=[SPAN($t1, $t16, $t17)], host=[$t4], cpu_usage=[$t7], $f3=[$t18])
                      CalciteEnumerableIndexScan(table=[[OpenSearch, events]])
              EnumerableSort(sort0=[$0], dir0=[ASC])
                EnumerableLimit(fetch=[10])
                  EnumerableSort(sort0=[$1], dir0=[DESC])
                    EnumerableAggregate(group=[{0}], grand_total=[SUM($2)])
                      EnumerableCalc(expr#0..3=[{inputs}], expr#4=[0], expr#5=[=($t3, $t4)], expr#6=[null:DOUBLE], expr#7=[CASE($t5, $t6, $t2)], expr#8=[/($t7, $t3)], expr#9=[IS NOT NULL($t0)], proj#0..1=[{exprs}], $f2=[$t8], $condition=[$t9])
                        EnumerableAggregate(group=[{0, 2}], agg#0=[$SUM0($1)], agg#1=[COUNT($1)])
                          EnumerableCalc(expr#0..15=[{inputs}], expr#16=[1], expr#17=['m'], expr#18=[SPAN($t1, $t16, $t17)], host=[$t4], cpu_usage=[$t7], $f3=[$t18])
                            CalciteEnumerableIndexScan(table=[[OpenSearch, events]])
