/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 *
 * Modifications Copyright OpenSearch Contributors. See
 * GitHub history for details.
 */

/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform
import org.opensearch.gradle.test.RestIntegTestTask

apply plugin: 'opensearch.build'
apply plugin: 'opensearch.rest-test'
apply plugin: 'java'
apply plugin: 'io.freefair.lombok'

ext {
    projectSubstitutions = [:]
    licenseFile = rootProject.file('LICENSE.TXT')
    noticeFile = rootProject.file('NOTICE')
}

tasks.withType(licenseHeaders.class) {
    additionalLicense 'AL   ', 'Apache', 'Licensed under the Apache License, Version 2.0 (the "License")'
}

validateNebulaPom.enabled = false
loggerUsageCheck.enabled = false

configurations.all {
    exclude group: "commons-logging", module: "commons-logging"
    // enforce 1.1.3, https://www.whitesourcesoftware.com/vulnerability-database/WS-2019-0379
    resolutionStrategy.force 'commons-codec:commons-codec:1.13'
    resolutionStrategy.force 'com.google.guava:guava:29.0-jre'
    resolutionStrategy.force 'com.fasterxml.jackson.core:jackson-core:2.10.5'
    resolutionStrategy.force 'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.11.4'
}

dependencies {
    testCompile group: 'org.opensearch.test', name: 'framework', version: "${opensearch_version}"
    testCompile group: 'org.opensearch.client', name: 'opensearch-rest-high-level-client', version: "${opensearch_version}"
    testCompile group: 'org.opensearch.client', name: 'opensearch-rest-client', version: "${opensearch_version}"
    testCompile group: 'org.hamcrest', name: 'hamcrest', version: '2.1'
    testCompile group: 'org.apache.logging.log4j', name: 'log4j-core', version:'2.11.1'
    testCompile project(':plugin')
    testCompile project(':legacy')
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.6.2')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.6.2')

    // JDBC drivers for comparison test. Somehow Apache Derby throws security permission exception.
    testCompile fileTree('../sql-jdbc/build/libs') {
        include '*.jar'
        builtBy 'compileJdbc'
    }
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.200'
    testCompile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.28.0'
    testCompile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
}

dependencyLicenses.enabled = false
testingConventions.enabled = false
checkstyleTest.ignoreFailures = true
forbiddenApisTest.enabled = false

compileTestJava {
    options.compilerArgs.addAll(["-processor", 'lombok.launch.AnnotationProcessorHider$AnnotationProcessor'])
    doFirst { // Necessary because of many warnings in legacy SQL IT
        options.compilerArgs.remove('-Werror')
        options.compilerArgs.remove('-Xdoclint:all')
    }
}

testClusters.all {
    testDistribution = 'archive'
    plugin ":plugin"
}

// Run PPL ITs and new, legacy and comparison SQL ITs with new SQL engine enabled
integTest {
    dependsOn ':plugin:bundlePlugin'

    systemProperty 'tests.security.manager', 'false'
    systemProperty('project.root', project.projectDir.absolutePath)

    systemProperty "https", System.getProperty("https")
    systemProperty "user", System.getProperty("user")
    systemProperty "password", System.getProperty("password")

    // Set default query size limit
    systemProperty 'defaultQuerySizeLimit', '10000'

    // Tell the test JVM if the cluster JVM is running under a debugger so that tests can use longer timeouts for
    // requests. The 'doFirst' delays reading the debug setting on the cluster till execution time.
    doFirst { systemProperty 'cluster.debug', getDebug() }

    if (System.getProperty("test.debug") != null) {
        jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:5005'
    }

    exclude 'org/opensearch/sql/doctest/**/*IT.class'
    exclude 'org/opensearch/sql/correctness/**'

    // Explain IT is dependent on internal implementation of old engine so it's not necessary
    // to run these with new engine and not necessary to make this consistent with old engine.
    exclude 'org/opensearch/sql/legacy/ExplainIT.class'
    exclude 'org/opensearch/sql/legacy/PrettyFormatterIT.class'
    exclude 'org/opensearch/sql/legacy/TermQueryExplainIT.class'

    // Skip old semantic analyzer IT because analyzer in new engine has different behavior
    exclude 'org/opensearch/sql/legacy/QueryAnalysisIT.class'

    // Skip this IT because all assertions are against explain output
    exclude 'org/opensearch/sql/legacy/OrderIT.class'
}


task docTest(type: RestIntegTestTask) {
    dependsOn ':plugin:bundlePlugin'

    systemProperty 'tests.security.manager', 'false'
    systemProperty('project.root', project.projectDir.absolutePath)

    // Tell the test JVM if the cluster JVM is running under a debugger so that tests can use longer timeouts for
    // requests. The 'doFirst' delays reading the debug setting on the cluster till execution time.
    doFirst { systemProperty 'cluster.debug', getDebug()}

    if (System.getProperty("test.debug") != null) {
        jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:5005'
    }

    include 'org/opensearch/sql/doctest/**/*IT.class'
    exclude 'org/opensearch/sql/correctness/**/*IT.class'
    exclude 'org/opensearch/sql/ppl/**/*IT.class'
    exclude 'org/opensearch/sql/sql/**/*IT.class'
    exclude 'org/opensearch/sql/legacy/**/*IT.class'
}

task comparisonTest(type: RestIntegTestTask) {
    dependsOn ':plugin:bundlePlugin'

    systemProperty 'tests.security.manager', 'false'
    systemProperty('project.root', project.projectDir.absolutePath)

    // Tell the test JVM if the cluster JVM is running under a debugger so that tests can use longer timeouts for
    // requests. The 'doFirst' delays reading the debug setting on the cluster till execution time.
    doFirst { systemProperty 'cluster.debug', getDebug()}

    if (System.getProperty("test.debug") != null) {
        jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:5005'
    }

    include 'org/opensearch/sql/correctness/**/*IT.class'
    exclude 'org/opensearch/sql/doctest/**/*IT.class'
    exclude 'org/opensearch/sql/ppl/**/*IT.class'
    exclude 'org/opensearch/sql/legacy/**/*IT.class'

    // Enable logging output to console
    testLogging.showStandardStreams true

    // Pass down system properties to IT class
    systemProperty "esHost", System.getProperty("esHost")
    systemProperty "dbUrl", System.getProperty("dbUrl")
    systemProperty "otherDbUrls", System.getProperty("otherDbUrls")
    systemProperty "queries", System.getProperty("queries")
}

task compileJdbc(type:Exec) {
    workingDir '../sql-jdbc/'

    if (DefaultNativePlatform.getCurrentOperatingSystem().isWindows()) {
        commandLine './gradlew.bat', 'build'
        commandLine './gradlew.bat', 'shadowJar'
    } else {
        commandLine './gradlew', 'build'
        commandLine './gradlew', 'shadowJar'
    }
}
