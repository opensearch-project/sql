/*
 * Copyright OpenSearch Contributors
 * SPDX-License-Identifier: Apache-2.0
 */

/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

plugins {
    id 'java'
    id "io.freefair.lombok"
    id 'jacoco'
}

repositories {
    mavenCentral()
}
//
//configurations.all {
//    resolutionStrategy.dependencySubstitution {
//        substitute module('com.google.guava:guava:26.0-jre') with module('com.google.guava:guava:29.0-jre')
//    }
//}

dependencies {
    compile group: 'com.google.guava', name: 'guava', version: '31.0.1-jre'
    compile group: 'org.springframework', name: 'spring-context', version: '5.2.5.RELEASE'
    compile group: 'org.springframework', name: 'spring-beans', version: '5.2.5.RELEASE'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    compile group: 'com.facebook.presto', name: 'presto-matching', version: '0.240'
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
    compile project(':common')

    testImplementation('org.junit.jupiter:junit-jupiter:5.6.2')
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '2.1'
    testCompile group: 'org.springframework', name: 'spring-test', version: '5.2.5.RELEASE'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.3.3'
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.3.3'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

jacoco {
    toolVersion = "0.8.5"
}
jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/ast/**'])
        }))
    }
}
test.finalizedBy(project.tasks.jacocoTestReport)
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                minimum = 1.0
            }
            limit {
                counter = 'BRANCH'
                minimum = 1.0
            }
        }
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/ast/**'])
        }))
    }
}
check.dependsOn jacocoTestCoverageVerification
