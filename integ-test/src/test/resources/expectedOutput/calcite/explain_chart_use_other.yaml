calcite:
  logical: |
    LogicalSystemLimit(fetch=[10000], type=[QUERY_SIZE_LIMIT])
      LogicalAggregate(group=[{0, 1}], max(severityNumber)=[MAX($2)])
        LogicalProject(flags=[$0], severityText=[CASE(IS NULL($1), 'NULL', <=($5, 2), $1, 'max_among_other')], max(severityNumber)=[$2])
          LogicalJoin(condition=[=($1, $3)], joinType=[left])
            LogicalAggregate(group=[{0, 1}], max(severityNumber)=[MAX($2)])
              LogicalProject(flags=[$23], severityText=[$7], severityNumber=[$163])
                CalciteLogicalIndexScan(table=[[OpenSearch, opensearch-sql_test_index_otel_logs]])
            LogicalProject(severityText=[$0], __grand_total__=[$1], __row_number__=[ROW_NUMBER() OVER (ORDER BY $1 DESC NULLS LAST)])
              LogicalAggregate(group=[{0}], __grand_total__=[MAX($1)])
                LogicalFilter(condition=[IS NOT NULL($0)])
                  LogicalProject(severityText=[$1], max(severityNumber)=[$2])
                    LogicalAggregate(group=[{0, 1}], max(severityNumber)=[MAX($2)])
                      LogicalProject(flags=[$23], severityText=[$7], severityNumber=[$163])
                        CalciteLogicalIndexScan(table=[[OpenSearch, opensearch-sql_test_index_otel_logs]])
  physical: |
    EnumerableLimit(fetch=[10000])
      EnumerableAggregate(group=[{0, 1}], max(severityNumber)=[MAX($2)])
        EnumerableCalc(expr#0..4=[{inputs}], expr#5=[IS NULL($t1)], expr#6=['NULL'], expr#7=[2], expr#8=[<=($t4, $t7)], expr#9=['max_among_other'], expr#10=[CASE($t5, $t6, $t8, $t1, $t9)], flags=[$t0], severityText=[$t10], max(severityNumber)=[$t2])
          EnumerableMergeJoin(condition=[=($1, $3)], joinType=[left])
            CalciteEnumerableIndexScan(table=[[OpenSearch, opensearch-sql_test_index_otel_logs]], PushDownContext=[[AGGREGATION->rel#:LogicalAggregate.NONE.[](input=RelSubset#,group={0, 1},max(severityNumber)=MAX($2)), SORT->[1]], OpenSearchRequestBuilder(sourceBuilder={"from":0,"size":0,"timeout":"1m","aggregations":{"composite_buckets":{"composite":{"size":1000,"sources":[{"severityText":{"terms":{"field":"severityText","missing_bucket":true,"missing_order":"last","order":"asc"}}},{"flags":{"terms":{"field":"flags","missing_bucket":true,"missing_order":"first","order":"asc"}}}]},"aggregations":{"max(severityNumber)":{"max":{"field":"severityNumber"}}}}}}, requestedTotalSize=2147483647, pageSize=null, startFrom=0)])
            EnumerableSort(sort0=[$0], dir0=[ASC])
              EnumerableCalc(expr#0..2=[{inputs}], severityText=[$t0], $1=[$t2])
                EnumerableWindow(window#0=[window(order by [1 DESC-nulls-last] rows between UNBOUNDED PRECEDING and CURRENT ROW aggs [ROW_NUMBER()])])
                  CalciteEnumerableIndexScan(table=[[OpenSearch, opensearch-sql_test_index_otel_logs]], PushDownContext=[[FILTER->IS NOT NULL($7), AGGREGATION->rel#:LogicalAggregate.NONE.[](input=RelSubset#,group={1},__grand_total__=MAX($2))], OpenSearchRequestBuilder(sourceBuilder={"from":0,"size":0,"timeout":"1m","query":{"exists":{"field":"severityText","boost":1.0}},"aggregations":{"composite_buckets":{"composite":{"size":1000,"sources":[{"severityText":{"terms":{"field":"severityText","missing_bucket":true,"missing_order":"first","order":"asc"}}}]},"aggregations":{"__grand_total__":{"max":{"field":"severityNumber"}}}}}}, requestedTotalSize=2147483647, pageSize=null, startFrom=0)])
