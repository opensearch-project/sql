calcite:
  logical: |
    LogicalSystemLimit(fetch=[10000], type=[QUERY_SIZE_LIMIT])
      LogicalAggregate(group=[{1, 2}], max(severityNumber)=[MAX($0)])
        LogicalProject(max(severityNumber)=[$0], flags=[$1], severityText=[CASE(IS NULL($2), 'NULL', <=($5, 2), $2, 'max_among_other')])
          LogicalJoin(condition=[=($2, $3)], joinType=[left])
            LogicalProject(max(severityNumber)=[$2], flags=[$0], severityText=[$1])
              LogicalAggregate(group=[{0, 1}], max(severityNumber)=[MAX($2)])
                LogicalProject(flags=[$23], severityText=[$7], severityNumber=[$163])
                  CalciteLogicalIndexScan(table=[[OpenSearch, opensearch-sql_test_index_otel_logs]])
            LogicalProject(severityText=[$0], __grand_total__=[$1], __row_number__=[ROW_NUMBER() OVER (ORDER BY $1 DESC NULLS LAST)])
              LogicalAggregate(group=[{1}], __grand_total__=[MAX($0)])
                LogicalProject(max(severityNumber)=[$2], severityText=[$1])
                  LogicalAggregate(group=[{0, 1}], max(severityNumber)=[MAX($2)])
                    LogicalProject(flags=[$23], severityText=[$7], severityNumber=[$163])
                      CalciteLogicalIndexScan(table=[[OpenSearch, opensearch-sql_test_index_otel_logs]])
  physical: |
    EnumerableLimit(fetch=[10000])
      EnumerableAggregate(group=[{1, 2}], max(severityNumber)=[MAX($0)])
        EnumerableCalc(expr#0..4=[{inputs}], expr#5=[IS NULL($t2)], expr#6=['NULL'], expr#7=[2], expr#8=[<=($t4, $t7)], expr#9=['max_among_other'], expr#10=[CASE($t5, $t6, $t8, $t2, $t9)], proj#0..1=[{exprs}], severityText=[$t10])
          EnumerableMergeJoin(condition=[=($2, $3)], joinType=[left])
            EnumerableSort(sort0=[$2], dir0=[ASC])
              EnumerableCalc(expr#0..2=[{inputs}], max(severityNumber)=[$t2], flags=[$t1], severityText=[$t0])
                EnumerableAggregate(group=[{7, 23}], max(severityNumber)=[MAX($163)])
                  CalciteEnumerableIndexScan(table=[[OpenSearch, opensearch-sql_test_index_otel_logs]])
            EnumerableSort(sort0=[$0], dir0=[ASC])
              EnumerableCalc(expr#0..2=[{inputs}], severityText=[$t0], $1=[$t2])
                EnumerableWindow(window#0=[window(order by [1 DESC-nulls-last] rows between UNBOUNDED PRECEDING and CURRENT ROW aggs [ROW_NUMBER()])])
                  EnumerableAggregate(group=[{7}], __grand_total__=[MAX($163)])
                    CalciteEnumerableIndexScan(table=[[OpenSearch, opensearch-sql_test_index_otel_logs]])
