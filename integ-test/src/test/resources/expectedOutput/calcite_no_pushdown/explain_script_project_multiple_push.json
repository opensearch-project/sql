{
  "calcite": {
    "logical": "LogicalSystemLimit(fetch=[10000], type=[QUERY_SIZE_LIMIT])\n  LogicalProject(age2=[$17], upper_name=[$18], initial=[REX_EXTRACT($10, '(?<initial>^[A-Z])', 1)], lastname=[$10])\n    LogicalFilter(condition=[=($1, 'John')])\n      LogicalProject(account_number=[$0], firstname=[$1], address=[$2], balance=[$3], gender=[$4], city=[$5], employer=[$6], state=[$7], age=[$8], email=[$9], lastname=[$10], _id=[$11], _index=[$12], _score=[$13], _maxscore=[$14], _sort=[$15], _routing=[$16], age2=[$17], upper_name=[UPPER($1)])\n        LogicalFilter(condition=[>($17, 20)])\n          LogicalProject(account_number=[$0], firstname=[$1], address=[$2], balance=[$3], gender=[$4], city=[$5], employer=[$6], state=[$7], age=[$8], email=[$9], lastname=[$10], _id=[$11], _index=[$12], _score=[$13], _maxscore=[$14], _sort=[$15], _routing=[$16], age2=[+($8, 2)])\n            CalciteLogicalIndexScan(table=[[OpenSearch, opensearch-sql_test_index_account]])\n",
    "physical": "EnumerableLimit(fetch=[10000])\n  EnumerableCalc(expr#0..16=[{inputs}], expr#17=[2], expr#18=[+($t8, $t17)], expr#19=[UPPER($t1)], expr#20=['(?<initial>^[A-Z])'], expr#21=[1], expr#22=[REX_EXTRACT($t10, $t20, $t21)], expr#23=[20], expr#24=[>($t18, $t23)], expr#25=['John':VARCHAR], expr#26=[=($t1, $t25)], expr#27=[AND($t24, $t26)], age2=[$t18], upper_name=[$t19], initial=[$t22], lastname=[$t10], $condition=[$t27])\n    CalciteEnumerableIndexScan(table=[[OpenSearch, opensearch-sql_test_index_account]])\n"
  }
}