plugins {
    id 'base'  // Basic plugin for archive tasks
}

// Configuration
version = '0.1.0-SNAPSHOT'
group = 'org.opensearch'
def artifactId = 'language-grammar-poc2'

// Define locations
def grammarSourceDir = file('language-grammar/src/main/antlr4')
def buildDir = file("${project.buildDir}")
def mavenLocal = new File(System.getProperty('user.home'), '.m2/repository')

// Package grammar files into a ZIP
task packageGrammarFiles(type: Zip) {
    description = 'Package grammar files into a ZIP archive'

    from(grammarSourceDir) {
        include '**/*.g4'
    }

    archiveFileName = "${artifactId}-${version}.zip"
    destinationDirectory = buildDir
}

// Create POM file
task createPom {
    description = 'Create POM file for grammar artifact'

    def pomFile = file("${buildDir}/${artifactId}-${version}.pom")
    outputs.file pomFile

    doLast {
        pomFile.parentFile.mkdirs()
        pomFile.text = """<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>${group}</groupId>
    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>
    <packaging>zip</packaging>
    <description>OpenSearch Language Grammar Files</description>
</project>
"""
    }
}

// Place artifacts in local Maven repository
task prepareLocalMavenRepository(dependsOn: [packageGrammarFiles, createPom]) {
    description = 'Prepare local Maven repository with grammar artifacts'

    def groupPath = "${group}".replace('.', '/')
    def versionPath = "${mavenLocal}/${groupPath}/${artifactId}/${version}"

    doLast {
        file(versionPath).mkdirs()

        copy {
            from packageGrammarFiles.archiveFile
            into versionPath
        }

        copy {
            from "${buildDir}/${artifactId}-${version}.pom"
            into versionPath
        }

        println "Files placed in local Maven repository path: ${versionPath}"
    }
}

// Generate checksums for Maven artifacts
task generateChecksums(dependsOn: prepareLocalMavenRepository) {
    description = 'Generate checksums for Maven artifacts'

    def groupPath = "${group}".replace('.', '/')
    def versionPath = "${mavenLocal}/${groupPath}/${artifactId}/${version}"

    doLast {
        file(versionPath).listFiles().each { artifact ->
            if (artifact.name.endsWith('.zip') || artifact.name.endsWith('.pom')) {
                exec {
                    workingDir artifact.parentFile
                    commandLine 'bash', '-c', "sha512sum \"${artifact.name}\" | awk '{print \$1}' > \"${artifact.name}.sha512\""
                }
                exec {
                    workingDir artifact.parentFile
                    commandLine 'bash', '-c', "sha256sum \"${artifact.name}\" | awk '{print \$1}' > \"${artifact.name}.sha256\""
                }
            }
        }
        println "Checksums generated in: ${versionPath}"
    }
}

// Main task to prepare all artifacts
task prepareGrammarArtifacts {
    description = 'Prepare all grammar artifacts for publishing'
    dependsOn generateChecksums
}