{
  "calcite": {
    "logical": "LogicalProject(name=[$0], country=[$1], state=[$2], month=[$3], year=[$4], age=[$5])\n  LogicalFilter(condition=[IN($0, {\nLogicalProject(name=[$0])\n  CalciteLogicalIndexScan(table=[[OpenSearch, opensearch-sql_test_index_occupation]])\n})], variablesSet=[[$cor0]])\n    CalciteLogicalIndexScan(table=[[OpenSearch, opensearch-sql_test_index_state_country]])\n",
    "physical": "EnumerableHashJoin(condition=[=($0, $6)], joinType=[semi])\n  CalciteEnumerableIndexScan(table=[[OpenSearch, opensearch-sql_test_index_state_country]], PushDownContext=[[PROJECT->[name, country, state, month, year, age]], OpenSearchRequestBuilder(sourceBuilder={\"from\":0,\"timeout\":\"1m\",\"_source\":{\"includes\":[\"name\",\"country\",\"state\",\"month\",\"year\",\"age\"],\"excludes\":[]}}, requestedTotalSize=2147483647, pageSize=null, startFrom=0)])\n  EnumerableSort(sort0=[$0], dir0=[ASC])\n    CalciteEnumerableIndexScan(table=[[OpenSearch, opensearch-sql_test_index_occupation]], PushDownContext=[[PROJECT->[name], AGGREGATION->rel#:LogicalAggregate.NONE.[](input=RelSubset#,group={0})], OpenSearchRequestBuilder(sourceBuilder={\"from\":0,\"size\":0,\"timeout\":\"1m\",\"_source\":{\"includes\":[\"name\"],\"excludes\":[]},\"aggregations\":{\"composite_buckets\":{\"composite\":{\"size\":1000,\"sources\":[{\"name\":{\"terms\":{\"field\":\"name\",\"missing_bucket\":true,\"missing_order\":\"first\",\"order\":\"asc\"}}}]}}}}, requestedTotalSize=2147483647, pageSize=null, startFrom=0)])\n"
  }
}