{
  "calcite": {
    "logical": "LogicalSystemLimit(fetch=[10000], type=[QUERY_SIZE_LIMIT])\n  LogicalProject(total_count=[$1], unique_states=[$2], all_lastnames=[$3], employer=[$0])\n    LogicalAggregate(group=[{0}], total_count=[COUNT()], unique_states=[VALUES($1)], all_lastnames=[LIST($2)])\n      LogicalProject(employer=[$6], state=[$7], lastname=[$10])\n        LogicalFilter(condition=[<($0, 20)])\n          CalciteLogicalIndexScan(table=[[OpenSearch, opensearch-sql_test_index_account]])\n",
    "physical": "EnumerableLimit(fetch=[10000])\n  EnumerableCalc(expr#0..3=[{inputs}], total_count=[$t1], unique_states=[$t2], all_lastnames=[$t3], employer=[$t0])\n    EnumerableAggregate(group=[{0}], total_count=[COUNT()], unique_states=[VALUES($1)], all_lastnames=[LIST($2)])\n      CalciteEnumerableIndexScan(table=[[OpenSearch, opensearch-sql_test_index_account]], PushDownContext=[[PROJECT->[account_number, employer, state, lastname], FILTER-><($0, 20), PROJECT->[employer, state, lastname]], OpenSearchRequestBuilder(sourceBuilder={\"from\":0,\"timeout\":\"1m\",\"query\":{\"range\":{\"account_number\":{\"from\":null,\"to\":20,\"include_lower\":true,\"include_upper\":false,\"boost\":1.0}}},\"_source\":{\"includes\":[\"employer\",\"state\",\"lastname\"],\"excludes\":[]},\"sort\":[{\"_doc\":{\"order\":\"asc\"}}]}, requestedTotalSize=2147483647, pageSize=null, startFrom=0)])\n"
  }
}