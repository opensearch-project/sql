<?xml version="1.0" encoding="utf-8"?>
<dialect name='OpenSearchSqlJdbcDialect'
         class='opensearch_jdbc'
         base='MySQL41UnicodeDriverDialect'
         version='18.1'>   
   <function-map>   
        <function group='aggregate' name='STDEV' return-type='real'>
            <formula>STDDEV_SAMP(%1)</formula>
            <unagg-formula>NULL</unagg-formula>
            <argument type='real' />
        </function>
        <function group='aggregate' name='VAR' return-type='real'>
            <formula>VAR_SAMP(%1)</formula>
            <unagg-formula>NULL</unagg-formula>
            <argument type='real' />
        </function>

        <function group='cast' name='DATE' return-type='date'>
            <formula>DATE_FORMAT(%1, &apos;%Y-%m-%d&apos;)</formula>
            <argument type='str' />
        </function>
        <function group='cast' name='STR' return-type='str'>
            <formula>DATE_FORMAT(%1, &apos;%Y-%m-%d %H:%i:%s&apos;)</formula>
            <argument type='datetime' />
        </function>
        <function group='cast' name='DATETIME' return-type='datetime'>
            <formula>CAST(%1 AS TIMESTAMP)</formula>
            <argument type='str' />
        </function>
        <function group='cast' name='FLOAT' return-type='real'>
            <!-- 693961 = TO_DAYS('1900-01-01'), since this represents the date of the Epoch. -->
            <formula>TO_DAYS(%1) - 693961.0</formula>
            <argument type='datetime' />
        </function>
        <function group='cast' name='STR' return-type='str'>
            <formula>CAST(%1 as string)</formula>
            <argument type='real' />
        </function>
        <function group='cast' name='STR' return-type='str'>
            <formula>CAST(%1 as string)</formula>
            <argument type='int' />
        </function>
        <function group='cast' name='STR' return-type='str'>
            <formula>CAST(%1 as string)</formula>
            <argument type='date' />
        </function>
        <function group='cast' name='STR' return-type='str'>
            <formula>CAST(%1 as string)</formula>
            <argument type='bool' />
        </function>
        <function group='cast' name='INT' return-type='int'>
            <formula>CAST(%1 as int)</formula>
            <argument type='real' />
        </function>
        <function group='cast' name='INT' return-type='int'>
            <formula>CAST(%1 as int)</formula>
            <argument type='bool' />
        </function>

        <function group='logical' name='IFNULL' return-type='datetime'>
            <formula>CASE WHEN ISNULL(%1) THEN SUBDATE(TIMESTAMP(%2), INTERVAL HOUR(TIMESTAMP(%2)) HOUR) ELSE %1 END</formula>
            <argument type='datetime' />
            <argument type='date' />
        </function>

        <function group='operator' name='!=' return-type='bool'>
            <formula>(%1 AND NOT %2 OR NOT %1 AND %2)</formula>
            <argument type='bool' />
            <argument type='bool' />
        </function>
        <function group='operator' name='!=' return-type='bool'>
            <formula>(%1 AND %2 = 0 OR NOT %1 AND %2 &lt;&gt; 0)</formula>
            <argument type='bool' />
            <argument type='int' />
        </function>
        <function group='operator' name='!=' return-type='bool'>
            <formula>(%1 &lt;&gt; %2)</formula>
            <argument type='real' />
            <argument type='real' />
        </function>
        <function group='operator' name='!=' return-type='bool'>
            <formula>(%1 = 0 AND %2 OR %1 &lt;&gt; 0 AND NOT %2)</formula>
            <argument type='int' />
            <argument type='bool' />
        </function>
        <function group='operator' name='!=' return-type='bool'>
            <formula>(%1 &lt;&gt; %2)</formula>
            <argument type='str' />
            <argument type='str' />
        </function>
        <function group='operator' name='!=' return-type='bool'>
            <formula>(%1 &lt;&gt; %2)</formula>
            <argument type='datetime' />
            <argument type='datetime' />
        </function>
        <function group='operator' name='!=' return-type='bool'>
            <formula>(CAST(DATE_FORMAT(DATE(%1), '%Y-%m-%d 00:00:00') AS TIMESTAMP) &lt;&gt; %2)</formula>
            <argument type='date' />
            <argument type='datetime' />
        </function>
        <function group='operator' name='!=' return-type='bool'>
            <formula>(%1 &lt;&gt; CAST(DATE_FORMAT(DATE(%2), '%Y-%m-%d 00:00:00') AS TIMESTAMP))</formula>
            <argument type='datetime' />
            <argument type='date' />
        </function>
        <function group='operator' name='+' return-type='datetime'>
            <!-- 86400 as it represents seconds in a day -->
            <formula>DATE_ADD(DATE_ADD(%1, INTERVAL FLOOR(%2) DAY), INTERVAL CAST(86400 * (%2 - FLOOR(%2)) AS INT) SECOND)</formula>
            <argument type='datetime' />
            <argument type='real' />
        </function>
        <function group='operator' name='-' return-type='int'>
            <formula>(%1 * -1)</formula>
            <argument type='int' />
        </function>
        <function group='operator' name='-' return-type='real'>
            <formula>(%1 * -1)</formula>
            <argument type='real' />
        </function>
        <function group='operator' name='-' return-type='datetime'>
            <!-- 86400 as it represents seconds in a day -->
            <formula>DATE_SUB(DATE_SUB(%1, INTERVAL FLOOR(%2) DAY), INTERVAL CAST(86400 * (%2 - FLOOR(%2)) AS INT) SECOND)</formula>
            <argument type='datetime' />
            <argument type='real' />
        </function>
        <function group='operator' name='/' return-type='real'>
            <formula>CAST(%1 AS DOUBLE) / %2</formula>
            <argument type='int' />
            <argument type='int' />
        </function>

        <function group="numeric" name="COT" return-type="real">
            <formula>CASE WHEN %1 = 0 THEN NULL ELSE COT(%1) END</formula>
            <argument type="real" />
        </function>
        <function group='numeric' name='DIV' return-type='int'>
            <formula>CASE WHEN %2 = 0 THEN NULL ELSE ( %1 / %2 ) END</formula>
            <argument type='int' />
            <argument type='int' />
        </function>
        <function group='numeric' name='DIV' return-type='real'>
            <formula>CASE WHEN %2 = 0 THEN NULL ELSE ( %1 / %2 ) END</formula>
            <argument type='real' />
            <argument type='real' />
        </function>
        <function group="numeric" name="LN" return-type="real">
            <formula>(CASE WHEN %1 &gt; 0 THEN LN(%1) ELSE NULL END)</formula>
            <argument type="real" />
        </function>
        <function group="numeric" name="LOG" return-type="real">
            <formula>CASE WHEN %1 &gt; 0 THEN LOG10(%1) ELSE NULL END</formula>
            <argument type="real" />
        </function>
        <function group="numeric" name="LOG" return-type="real">
            <formula>CASE WHEN %1 &gt; 0 AND %2 &gt; 0 AND %2 &lt;&gt; 1 THEN LOG(%2,%1) ELSE NULL END</formula>
            <argument type="real" />
            <argument type="real" />
        </function>
        <function group='numeric' name='MAX' return-type='int'>
            <formula>CASE WHEN ISNULL(%1) THEN NULL
                WHEN ISNULL(%2) THEN NULL
	            WHEN %1 &gt; %2 THEN %1
                ELSE %2 END</formula>
            <argument type='int' />
            <argument type='int' />
        </function>
        <function group='numeric' name='MAX' return-type='real'>
            <formula>CASE WHEN ISNULL(%1) THEN NULL
                WHEN ISNULL(%2) THEN NULL
	            WHEN %1 &gt; %2 THEN %1
                ELSE %2 END</formula>
            <argument type='real' />
            <argument type='real' />
        </function>
        <function group='numeric' name='MAX' return-type='datetime'>
            <formula>CASE WHEN ISNULL(%1) THEN NULL
                WHEN ISNULL(%2) THEN NULL
	            WHEN %1 &gt; %2 THEN %1
                ELSE %2 END</formula>
            <argument type='datetime' />
            <argument type='datetime' />
        </function>
        <function group='numeric' name='MAX' return-type='str'>
            <formula>CASE WHEN ISNULL(%1) THEN NULL
                WHEN ISNULL(%2) THEN NULL
	            WHEN %1 &gt; %2 THEN %1
                ELSE %2 END</formula>
            <argument type='str' />
            <argument type='str' />
        </function>
        <function group='numeric' name='MIN' return-type='int'>
            <formula>CASE WHEN ISNULL(%1) THEN NULL
                WHEN ISNULL(%2) THEN NULL
	            WHEN %1 &lt; %2 THEN %1
                ELSE %2 END</formula>
            <argument type='int' />
            <argument type='int' />
        </function>
        <function group='numeric' name='MIN' return-type='real'>
            <formula>CASE WHEN ISNULL(%1) THEN NULL
                WHEN ISNULL(%2) THEN NULL
	            WHEN %1 &lt; %2 THEN %1
                ELSE %2 END</formula>
            <argument type='real' />
            <argument type='real' />
        </function>
        <function group='numeric' name='MIN' return-type='datetime'>
            <formula>CASE WHEN ISNULL(%1) THEN NULL
                WHEN ISNULL(%2) THEN NULL
	            WHEN %1 &lt; %2 THEN %1
                ELSE %2 END</formula>
            <argument type='datetime' />
            <argument type='datetime' />
        </function>
        <function group='numeric' name='MIN' return-type='str'>
            <formula>CASE WHEN ISNULL(%1) THEN NULL
                WHEN ISNULL(%2) THEN NULL
	            WHEN %1 &lt; %2 THEN %1
                ELSE %2 END</formula>
            <argument type='str' />
            <argument type='str' />
        </function>
        <function group='numeric' name='CEILING' return-type='int'>
            <formula>CEIL(%1)</formula>
            <argument type='real' />
        </function>
        <function group='numeric' name='FLOOR' return-type='int'>
            <formula>FLOOR(%1)</formula>
            <argument type='real' />
        </function>
        <function group='numeric' name='HEXBINX' return-type='real'>
            <formula>(((CASE WHEN (ABS((%2) - (CAST( ( (%2) / SQRT(3.0) ) AS INT ) * SQRT(3.0)))) + (SQRT(3.0) * ((ABS((%1) - (CAST( ( (%1) / 3.0 ) AS INT ) * 3.0))) - 1.0)) &gt; 0.0 THEN 1.5 ELSE 0.0 END) - (CASE WHEN ((%1) - (CAST( ( (%1) / 3.0 ) AS INT ) * 3.0) &lt; 0.0) AND ((CASE WHEN (ABS((%2) - (CAST( ( (%2) / SQRT(3.0) ) AS INT ) * SQRT(3.0)))) + (SQRT(3.0) * ((ABS((%1) - (CAST( ( (%1) / 3.0 ) AS INT ) * 3.0))) - 1.0)) &gt; 0.0 THEN 1.5 ELSE 0.0 END) &gt; 0.0) THEN 3.0 ELSE 0.0 END)) + (CAST( ( (%1) / 3.0 ) AS INT ) * 3.0))</formula>
            <argument type='real' />
            <argument type='real' />
        </function>
        <function group='numeric' name='HEXBINY' return-type='real'>
            <formula>ROUND( (((CASE WHEN (ABS((%2) - (ROUND( ( (%2) / SQRT(3.0) ), 0 ) * SQRT(3.0)))) + (SQRT(3.0) * ((ABS((%1) - (ROUND( ( (%1) / 3.0 ), 0 ) * 3.0))) - 1.0)) &gt; 0.0 THEN SQRT(3.0) / 2.0 ELSE 0.0 END) - (CASE WHEN ((%2) - (ROUND( ( (%2) / SQRT(3.0) ), 0 ) * SQRT(3.0)) &lt; 0.0) AND ((CASE WHEN (ABS((%2) - (ROUND( ( (%2) / SQRT(3.0) ), 0 ) * SQRT(3.0)))) + (SQRT(3.0) * ((ABS((%1) - (ROUND( ( (%1) / 3.0 ), 0 ) * 3.0))) - 1.0)) &gt; 0.0 THEN SQRT(3.0) / 2.0 ELSE 0.0 END) &gt; 0.0) THEN SQRT(3.0) ELSE 0.0 END)) + (ROUND( ( (%2) / SQRT(3.0) ), 0 ) * SQRT(3.0))), 3)</formula>
            <argument type='real' />
            <argument type='real' />
        </function>

        <function group='date' name='DAYOFYEAR' return-type='int'>
            <formula>DAY_OF_YEAR(%1)</formula>
            <argument type='date' />
        </function>
        <function group='date' name='DAYOFMONTH' return-type='int'>
            <formula>DAY_OF_MONTH(%1)</formula>
            <argument type='date' />
        </function>
        <function group='date' name='DAYOFWEEK' return-type='int'>
            <formula>DAY_OF_WEEK(%1)</formula>
            <argument type='date' />
        </function>

        <function group='string' name='MID' return-type='str'>
            <formula>SUBSTR(%1,%2)</formula>
            <argument type='str' />
            <argument type='int' />
        </function>
        <function group='string' name='MID' return-type='str'>
            <formula>SUBSTR(%1,CAST(%2 as int))</formula>
            <argument type='str' />
            <argument type='real' />
        </function>
        <function group='string' name='MID' return-type='str'>
            <formula>SUBSTR(%1,%2,%3)</formula>
            <argument type='str' />
            <argument type='int' />
            <argument type='int' />
        </function>
        <function group='string' name='MID' return-type='str'>
            <formula>SUBSTR(%1,CAST(%2 as int),%3)</formula>
            <argument type='str' />
            <argument type='real' />
            <argument type='int' />
        </function>
        <function group='string' name='MID' return-type='str'>
            <formula>SUBSTR(%1,%2,CAST(%3 as int))</formula>
            <argument type='str' />
            <argument type='int' />
            <argument type='real' />
        </function>
        <function group='string' name='MID' return-type='str'>
            <formula>SUBSTR(%1,CAST(%2 as int),CAST(%3 as int))</formula>
            <argument type='str' />
            <argument type='real' />
            <argument type='real' />
        </function>

        <function group='string' name='FIND' return-type='int'>
<!--        The formula was simplified, because OS returns valid results even if the argument is NULL or <1 -->
<!--        <formula>(CASE WHEN ISNULL(%3) THEN NULL WHEN %3 &gt;= 1 THEN LOCATE(%2,%1,CAST(%3 as int)) ELSE LOCATE(%2,%1,1) END)</formula>-->
            <formula>LOCATE(%2,%1,CAST(%3 as int))</formula>
            <argument type='str' />
            <argument type='str' />
            <argument type='real' />
        </function>
        <function group='string' name='FIND' return-type='int'>
            <formula>LOCATE(%2,%1,%3)</formula>
            <argument type='str' />
            <argument type='str' />
            <argument type='int' />
        </function>

        <date-function name='DATEDIFF' return-type='int'>
            <formula part='year'>(YEAR(%3) - YEAR(%2))</formula>
            <formula part='quarter'>((YEAR(%3) - YEAR(%2)) * 4 + (QUARTER(%3) - QUARTER(%2)))</formula>
            <formula part='month'>((YEAR(%3) - YEAR(%2)) * 12 + (MONTH(%3) - MONTH(%2)))</formula>
            <formula part='dayofyear'>(TO_DAYS(%3) - TO_DAYS(%2))</formula>
            <formula part='day'>(TO_DAYS(%3) - TO_DAYS(%2))</formula>
            <formula part='weekday'>(TO_DAYS(%3) - TO_DAYS(%2))</formula>
            <formula part='week'>FLOOR(((TO_DAYS(%3) - (DAYOFWEEK(%3) - 1)) - (TO_DAYS(%2) - (DAYOFWEEK(%2) - 1)))/7)</formula>
            <!-- 3600 as it represents seconds in an hour -->
            <formula part='hour'>((TO_DAYS(%3) - TO_DAYS(%2)) * 24 + FLOOR(TIME_TO_SEC(%3) / 3600) - FLOOR(TIME_TO_SEC(%2) / 3600))</formula>
            <!-- 1440 as it represents minutes in a day -->
            <formula part='minute'>((TO_DAYS(%3) - TO_DAYS(%2)) * 1440 + FLOOR(TIME_TO_SEC(%3) / 60) - FLOOR(TIME_TO_SEC(%2) / 60))</formula>
            <!-- 86400 as represents seconds in a day -->
            <formula part='second'>((TO_DAYS(%3) - TO_DAYS(%2)) * 86400 + (TIME_TO_SEC(%3) - TIME_TO_SEC(%2)))</formula>
            <argument type='localstr' />
            <argument type='datetime' />
            <argument type='datetime' />
        </date-function>
        <date-function name='DATEDIFF' return-type='int'>
            <formula part='week'>FLOOR((( TO_DAYS(%3) - ((7 + DAYOFWEEK(%3) - 2) % 7)) - (TO_DAYS(%2) - ((7 + DAYOFWEEK(%2) - 2) % 7) ) )/7)</formula>
            <argument type='localstr' />
            <argument type='datetime' />
            <argument type='datetime' />
            <argument type='localstr' />
        </date-function>
        <date-function name='DATENAME' return-type='str'>
            <formula part='year'>YEAR(%2)</formula>
            <formula part='quarter'>QUARTER(%2)</formula>
            <formula part='month'>MONTH(%2)</formula>
            <formula part='dayofyear'>DAYOFYEAR(%2)</formula>
            <formula part='day'>DAYOFMONTH(%2)</formula>
            <formula part='weekday'>DAYNAME(%2)</formula>
            <formula part='week'>FLOOR((7 + DAYOFYEAR(%2) - 1 + DAYOFWEEK(DATE_FORMAT(%2, '%Y-01-01 00:00:00')) - 1) / 7)</formula>
            <formula part='hour'>HOUR(%2)</formula>
            <formula part='minute'>MINUTE(%2)</formula>
            <formula part='second'>SECOND(%2)</formula>
            <argument type='localstr' />
            <argument type='datetime' />
        </date-function>
        <date-function name='DATENAME' return-type='str'>
            <formula part='week'>FLOOR((7 + DAYOFYEAR(%2) - 1 + ((7 + DAYOFWEEK(DATE_FORMAT(%2, '%Y-01-01 00:00:00')) - 2) % 7) ) / 7)</formula>
            <argument type='localstr' />
            <argument type='datetime' />
            <argument type='localstr' />
       </date-function>
       <date-function name='DATETRUNC' return-type='datetime'>
            <formula part='year'>DATE_FORMAT( %2, &apos;%Y-01-01 00:00:00&apos; )</formula>
            <formula part='quarter'>CONCAT(DATE_FORMAT(%2, '%Y-'), CONCAT(CAST((3*(QUARTER(%2)-1)+1) AS STRING), '-01 00:00:00'))</formula>
            <formula part='month'>DATE_FORMAT( %2, &apos;%Y-%m-01 00:00:00&apos; )</formula>
            <formula part='dayofyear'>DATE_FORMAT( %2, &apos;%Y-%m-%d 00:00:00&apos; )</formula>
            <formula part='day'>DATE_FORMAT( %2, &apos;%Y-%m-%d 00:00:00&apos; )</formula>
            <formula part='weekday'>DATE_FORMAT( %2, &apos;%Y-%m-%d 00:00:00&apos; )</formula>
            <formula part='week'>FROM_DAYS( TO_DAYS(%2) - (DAYOFWEEK(%2) - 1))</formula>
            <formula part='hour'>DATE_FORMAT( %2, &apos;%Y-%m-%d %H:00:00&apos; )</formula>
            <formula part='minute'>DATE_FORMAT( %2, &apos;%Y-%m-%d %H:%i:00&apos; )</formula>
            <formula part='second'>DATE_FORMAT( %2, &apos;%Y-%m-%d %H:%i:%s&apos; )</formula>
            <argument type='localstr' />
            <argument type='datetime' />
        </date-function>
        <date-function name='DATETRUNC' return-type='datetime'>
            <formula part='week'>FROM_DAYS( TO_DAYS(%2) - ((7 + DAYOFWEEK(%2) - 2) % 7) )</formula>
            <argument type='localstr' />
            <argument type='datetime' />
            <argument type='localstr' />
        </date-function>

        <remove-function name='FINDNTH'>
            <argument type='str' />
            <argument type='str' />
            <argument type='real' />        
        </remove-function>

        <remove-function name='DATEPARSE'>
            <argument type='localstr' />
            <argument type='str' />
        </remove-function>
        <remove-function name='ISDATE'>
            <argument type='str' />
        </remove-function>

        <remove-function name='USEC_TO_TIMESTAMP'>
            <argument type='int' />
        </remove-function>

        <remove-function name='TIMESTAMP_TO_USEC'>
            <argument type='datetime' />
        </remove-function>

        <remove-function name='SPACE'>
            <argument type='int' />
        </remove-function>
   </function-map>
</dialect>
