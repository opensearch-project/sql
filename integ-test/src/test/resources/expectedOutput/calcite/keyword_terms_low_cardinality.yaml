calcite:
  logical: |
    LogicalSystemLimit(sort0=[$0], dir0=[DESC-nulls-last], fetch=[10000], type=[QUERY_SIZE_LIMIT])
      LogicalSort(sort0=[$0], dir0=[DESC-nulls-last], fetch=[50])
        LogicalProject(country=[$1], aws.cloudwatch.log_stream=[$0])
          LogicalAggregate(group=[{0}], country=[COUNT()])
            LogicalProject(aws.cloudwatch.log_stream=[$34])
              LogicalFilter(condition=[IS NOT NULL($34)])
                CalciteLogicalIndexScan(table=[[OpenSearch, big5]])
  physical: |
    CalciteEnumerableIndexScan(table=[[OpenSearch, big5]], PushDownContext=[[AGGREGATION->rel#:LogicalAggregate.NONE.[](input=RelSubset#,group={0},country=COUNT()), PROJECT->[country, aws.cloudwatch.log_stream], SORT_AGG_METRICS->[0 DESC LAST], LIMIT->50, LIMIT->10000], OpenSearchRequestBuilder(sourceBuilder={"from":0,"size":0,"timeout":"1m","aggregations":{"aws.cloudwatch.log_stream":{"terms":{"field":"aws.cloudwatch.log_stream","size":50,"min_doc_count":1,"shard_min_doc_count":0,"show_term_doc_count_error":false,"order":[{"country":"desc"},{"_key":"asc"}]},"aggregations":{"country":{"value_count":{"field":"_index"}}}}}}, requestedTotalSize=2147483647, pageSize=null, startFrom=0)])