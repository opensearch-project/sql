{
  "calcite": {
    "logical": "LogicalSort(sort0=[$1], dir0=[ASC-nulls-first])\n  LogicalProject(count()=[$1], balance=[$0])\n    LogicalAggregate(group=[{0}], count()=[COUNT()])\n      LogicalProject(balance=[||(||(CASE(>=(POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))), 1.0E0), CAST(CAST(+(*(FLOOR(/(-($3, *(FLOOR(/(CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))))), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))))), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))))), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))))), *(FLOOR(/(CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))))), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))))))):INTEGER NOT NULL):VARCHAR NOT NULL, CAST(+(*(FLOOR(/(-($3, *(FLOOR(/(CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))))), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))))), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))))), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))))), *(FLOOR(/(CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))))), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))))))):VARCHAR NOT NULL), '-'), CASE(>=(POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))), 1.0E0), CAST(CAST(+(+(*(FLOOR(/(-($3, *(FLOOR(/(CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))))), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))))), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))))), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))))), *(FLOOR(/(CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))))), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))))), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))))):INTEGER NOT NULL):VARCHAR NOT NULL, CAST(+(+(*(FLOOR(/(-($3, *(FLOOR(/(CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))))), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))))), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))))), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))))), *(FLOOR(/(CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))))), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))))), POWER(10.0E0:DOUBLE, CASE(=(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ()))))), -(FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))), 1.0E0), FLOOR(LOG10(-(CASE(>(50000, MAX($3) OVER ()), 50000, MAX($3) OVER ()), CASE(<(1000, MIN($3) OVER ()), 1000, MIN($3) OVER ())))))))):VARCHAR NOT NULL))])\n        CalciteLogicalIndexScan(table=[[OpenSearch, opensearch-sql_test_index_account]])\n",
    "physical": "EnumerableSort(sort0=[$1], dir0=[ASC-nulls-first])\n  EnumerableCalc(expr#0..1=[{inputs}], count()=[$t1], balance=[$t0])\n    EnumerableAggregate(group=[{0}], count()=[COUNT()])\n      EnumerableCalc(expr#0..2=[{inputs}], expr#3=[10.0E0:DOUBLE], expr#4=[50000], expr#5=[>($t4, $t1)], expr#6=[CASE($t5, $t4, $t1)], expr#7=[1000], expr#8=[<($t7, $t2)], expr#9=[CASE($t8, $t7, $t2)], expr#10=[-($t6, $t9)], expr#11=[LOG10($t10)], expr#12=[FLOOR($t11)], expr#13=[=($t11, $t12)], expr#14=[1.0E0:DOUBLE], expr#15=[-($t12, $t14)], expr#16=[CASE($t13, $t15, $t12)], expr#17=[POWER($t3, $t16)], expr#18=[>=($t17, $t14)], expr#19=[/($t9, $t17)], expr#20=[FLOOR($t19)], expr#21=[*($t20, $t17)], expr#22=[-($t0, $t21)], expr#23=[/($t22, $t17)], expr#24=[FLOOR($t23)], expr#25=[*($t24, $t17)], expr#26=[+($t25, $t21)], expr#27=[CAST($t26):INTEGER NOT NULL], expr#28=[CAST($t27):VARCHAR NOT NULL], expr#29=[CAST($t26):VARCHAR NOT NULL], expr#30=[CASE($t18, $t28, $t29)], expr#31=['-'], expr#32=[||($t30, $t31)], expr#33=[+($t26, $t17)], expr#34=[CAST($t33):INTEGER NOT NULL], expr#35=[CAST($t34):VARCHAR NOT NULL], expr#36=[CAST($t33):VARCHAR NOT NULL], expr#37=[CASE($t18, $t35, $t36)], expr#38=[||($t32, $t37)], balance=[$t38])\n        EnumerableWindow(window#0=[window(aggs [MAX($0), MIN($0)])])\n          CalciteEnumerableIndexScan(table=[[OpenSearch, opensearch-sql_test_index_account]], PushDownContext=[[PROJECT->[balance]], OpenSearchRequestBuilder(sourceBuilder={\"from\":0,\"timeout\":\"1m\",\"_source\":{\"includes\":[\"balance\"],\"excludes\":[]}}, requestedTotalSize=2147483647, pageSize=null, startFrom=0)])\n"
  }
}
