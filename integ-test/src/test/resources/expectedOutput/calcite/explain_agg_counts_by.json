{
  "calcite": {
    "logical": "LogicalSystemLimit(fetch=[10000], type=[QUERY_SIZE_LIMIT])\n  LogicalProject(count()=[$1], c1=[$1], count(account_number)=[$2], c2=[$3], count(balance/10)=[$4], c3=[$5], count(b_1)=[$6], gender=[$0])\n    LogicalAggregate(group=[{0}], count()=[COUNT()], count(account_number)=[COUNT($1)], c2=[COUNT($2)], count(balance/10)=[COUNT($4)], c3=[COUNT($5)], count(b_1)=[COUNT($3)])\n      LogicalProject(gender=[$4], account_number=[$0], lastname=[$10], b_1=[+($3, 1)], $f6=[DIVIDE($3, 10)], $f7=[POWER($3, 2)])\n        CalciteLogicalIndexScan(table=[[OpenSearch, opensearch-sql_test_index_account]])\n",
    "physical": "EnumerableCalc(expr#0..6=[{inputs}], count()=[$t0], count()0=[$t0], count(account_number)=[$t1], c2=[$t2], count(balance/10)=[$t3], c3=[$t4], count(b_1)=[$t5], gender=[$t6])\n  CalciteEnumerableIndexScan(table=[[OpenSearch, opensearch-sql_test_index_account]], PushDownContext=[[AGGREGATION->rel#:LogicalAggregate.NONE.[](input=RelSubset#,group={0},count()=COUNT(),count(account_number)=COUNT($1),c2=COUNT($2),count(balance/10)=COUNT($4),c3=COUNT($5),count(b_1)=COUNT($3)), LIMIT->10000, PROJECT->[count(), count(account_number), c2, count(balance/10), c3, count(b_1), gender]], OpenSearchRequestBuilder(sourceBuilder={\"from\":0,\"size\":0,\"timeout\":\"1m\",\"aggregations\":{\"composite_buckets\":{\"composite\":{\"size\":1000,\"sources\":[{\"gender\":{\"terms\":{\"field\":\"gender.keyword\",\"missing_bucket\":true,\"missing_order\":\"first\",\"order\":\"asc\"}}}]}}}}, requestedTotalSize=2147483647, pageSize=null, startFrom=0)])\n"
  }
}
