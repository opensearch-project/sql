name: Publish artifacts to Maven

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 1.*
      - 2.*
      - poc/commit-metadata

jobs:
  # Job 1: Publish grammar files
  publish-grammar-files:
    name: Publish Grammar Files
    strategy:
      fail-fast: false
    #if: github.repository == 'opensearch-project/sql'
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write

    env:
      SNAPSHOT_REPO_URL: https://aws.oss.sonatype.org/content/repositories/snapshots/
      TARGET_REPO_PATH: org/opensearch/language-grammar-poc2
      VERSION: 0.1.0-SNAPSHOT
      ARTIFACT_ID: language-grammar-poc2  # Explicitly define the artifact ID

    steps:
      - uses: actions/checkout@v4
        id: checkout

      #Get Maven credentials
      - name: Setup publishing credentials
        id: creds
        run: |
          SONATYPE_USERNAME=$(aws secretsmanager get-secret-value --secret-id maven-snapshots-username --query SecretString --output text)
          SONATYPE_PASSWORD=$(aws secretsmanager get-secret-value --secret-id maven-snapshots-password --query SecretString --output text)
          echo "::add-mask::$SONATYPE_USERNAME"
          echo "::add-mask::$SONATYPE_PASSWORD"
          echo "SONATYPE_USERNAME=$SONATYPE_USERNAME" >> $GITHUB_ENV
          echo "SONATYPE_PASSWORD=$SONATYPE_PASSWORD" >> $GITHUB_ENV

      # Setup Java/Gradle
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Run Gradle to prepare grammar artifacts
      - name: Prepare grammar artifacts
        run: ./gradlew :language-grammar:prepareGrammarArtifacts

      # Create the initial directory structure in repository - FIXED to use env variable
      - name: Create grammar-poc directory structure in repository
        run: |
          TEMP_DIR=$(mktemp -d)
          echo "Directory placeholder - $(date)" > "${TEMP_DIR}/.placeholder"
          
          GROUP_PATH="org/opensearch"
          
          curl -X PUT -u "${SONATYPE_USERNAME}:${SONATYPE_PASSWORD}" \
            --upload-file "${TEMP_DIR}/.placeholder" \
            "${SNAPSHOT_REPO_URL}${GROUP_PATH}/${ARTIFACT_ID}/.placeholder"
          
          rm -rf "${TEMP_DIR}"

      # Capture commit ID
      - name: Set commit ID
        id: set_commit
        run: |
          COMMIT_ID=$(git log -1 --format='%H')
          echo "commit_id=${COMMIT_ID}" >> $GITHUB_OUTPUT
          echo "Using commit ID: ${COMMIT_ID}"

      # Update metadata with commit ID
      - name: Add commit ID to grammar metadata
        run: |
          COMMIT_ID="${{ steps.set_commit.outputs.commit_id }}"
          
          TEMP_DIR=$(mktemp -d)
          METADATA_FILE="${TEMP_DIR}/maven-metadata.xml"
          
          # Download existing metadata
          META_URL="${SNAPSHOT_REPO_URL}org/opensearch/${ARTIFACT_ID}/${VERSION}/maven-metadata.xml"
          curl -s -u "${SONATYPE_USERNAME}:${SONATYPE_PASSWORD}" -o "${METADATA_FILE}" "${META_URL}"
          
          if [ -s "${METADATA_FILE}" ]; then
            cp "${METADATA_FILE}" "${METADATA_FILE}.bak"
          
            # Add commit ID to metadata
            awk -v commit="${COMMIT_ID}" '
              /<versioning>/ {
                print $0
                print "  <commitId>" commit "</commitId>"
                next
              }
              {print}
            ' "${METADATA_FILE}.bak" > "${METADATA_FILE}"
          
            # Upload modified metadata
            curl -X PUT -u "${SONATYPE_USERNAME}:${SONATYPE_PASSWORD}" --upload-file "${METADATA_FILE}" "${META_URL}"
          
            # Update checksums
            cd "${TEMP_DIR}"
            sha256sum "maven-metadata.xml" | awk '{print $1}' > "maven-metadata.xml.sha256"
            sha512sum "maven-metadata.xml" | awk '{print $1}' > "maven-metadata.xml.sha512"
          
            curl -X PUT -u "${SONATYPE_USERNAME}:${SONATYPE_PASSWORD}" --upload-file "maven-metadata.xml.sha256" "${META_URL}.sha256"
            curl -X PUT -u "${SONATYPE_USERNAME}:${SONATYPE_PASSWORD}" --upload-file "maven-metadata.xml.sha512" "${META_URL}.sha512"
          
            echo "Version metadata updated with commit ID"
          else
            echo "Failed to download metadata, skipping commit ID addition"
          fi
          
          rm -rf "${TEMP_DIR}"