{
  "calcite": {
    "logical": "LogicalProject(pattern_count=[$1], patterns_field=[SAFE_CAST(ITEM(PATTERN_PARSER($0, $2), 'pattern'))], tokens=[SAFE_CAST(ITEM(PATTERN_PARSER($0, $2), 'tokens'))])\n  LogicalAggregate(group=[{1}], pattern_count=[COUNT($1)], sample_logs=[TAKE($0, $2)])\n    LogicalProject(email=[$9], patterns_field=[REGEXP_REPLACE($9, '[a-zA-Z0-9]+':VARCHAR, '<*>')], $f18=[10])\n      CalciteLogicalIndexScan(table=[[OpenSearch, opensearch-sql_test_index_account]])\n",
    "physical": "EnumerableCalc(expr#0..2=[{inputs}], expr#3=[PATTERN_PARSER($t0, $t2)], expr#4=['pattern'], expr#5=[ITEM($t3, $t4)], expr#6=[SAFE_CAST($t5)], expr#7=['tokens'], expr#8=[ITEM($t3, $t7)], expr#9=[SAFE_CAST($t8)], pattern_count=[$t1], patterns_field=[$t6], tokens=[$t9])\n  CalciteEnumerableIndexScan(table=[[OpenSearch, opensearch-sql_test_index_account]], PushDownContext=[[AGGREGATION->rel#:LogicalAggregate.NONE.[](input=RelSubset#,group={1},pattern_count=COUNT($1),sample_logs=TAKE($0, $2))], OpenSearchRequestBuilder(sourceBuilder={\"from\":0,\"size\":0,\"timeout\":\"1m\",\"aggregations\":{\"composite_buckets\":{\"composite\":{\"size\":1000,\"sources\":[{\"patterns_field\":{\"terms\":{\"script\":{\"source\":\"{\\\"langType\\\":\\\"calcite\\\",\\\"script\\\":\\\"{\\\\n  \\\\\\\"op\\\\\\\": {\\\\n    \\\\\\\"name\\\\\\\": \\\\\\\"REGEXP_REPLACE\\\\\\\",\\\\n    \\\\\\\"kind\\\\\\\": \\\\\\\"OTHER_FUNCTION\\\\\\\",\\\\n    \\\\\\\"syntax\\\\\\\": \\\\\\\"FUNCTION\\\\\\\"\\\\n  },\\\\n  \\\\\\\"operands\\\\\\\": [\\\\n    {\\\\n      \\\\\\\"input\\\\\\\": 9,\\\\n      \\\\\\\"name\\\\\\\": \\\\\\\"$9\\\\\\\"\\\\n    },\\\\n    {\\\\n      \\\\\\\"literal\\\\\\\": \\\\\\\"[a-zA-Z0-9]+\\\\\\\",\\\\n      \\\\\\\"type\\\\\\\": {\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"VARCHAR\\\\\\\",\\\\n        \\\\\\\"nullable\\\\\\\": false,\\\\n        \\\\\\\"precision\\\\\\\": -1\\\\n      }\\\\n    },\\\\n    {\\\\n      \\\\\\\"literal\\\\\\\": \\\\\\\"<*>\\\\\\\",\\\\n      \\\\\\\"type\\\\\\\": {\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"CHAR\\\\\\\",\\\\n        \\\\\\\"nullable\\\\\\\": false,\\\\n        \\\\\\\"precision\\\\\\\": 3\\\\n      }\\\\n    }\\\\n  ]\\\\n}\\\"}\",\"lang\":\"opensearch_compounded_script\",\"params\":{\"utcTimestamp\":*}},\"missing_bucket\":true,\"missing_order\":\"first\",\"order\":\"asc\"}}}]},\"aggregations\":{\"pattern_count\":{\"value_count\":{\"script\":{\"source\":\"{\\\"langType\\\":\\\"calcite\\\",\\\"script\\\":\\\"{\\\\n  \\\\\\\"op\\\\\\\": {\\\\n    \\\\\\\"name\\\\\\\": \\\\\\\"REGEXP_REPLACE\\\\\\\",\\\\n    \\\\\\\"kind\\\\\\\": \\\\\\\"OTHER_FUNCTION\\\\\\\",\\\\n    \\\\\\\"syntax\\\\\\\": \\\\\\\"FUNCTION\\\\\\\"\\\\n  },\\\\n  \\\\\\\"operands\\\\\\\": [\\\\n    {\\\\n      \\\\\\\"input\\\\\\\": 9,\\\\n      \\\\\\\"name\\\\\\\": \\\\\\\"$9\\\\\\\"\\\\n    },\\\\n    {\\\\n      \\\\\\\"literal\\\\\\\": \\\\\\\"[a-zA-Z0-9]+\\\\\\\",\\\\n      \\\\\\\"type\\\\\\\": {\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"VARCHAR\\\\\\\",\\\\n        \\\\\\\"nullable\\\\\\\": false,\\\\n        \\\\\\\"precision\\\\\\\": -1\\\\n      }\\\\n    },\\\\n    {\\\\n      \\\\\\\"literal\\\\\\\": \\\\\\\"<*>\\\\\\\",\\\\n      \\\\\\\"type\\\\\\\": {\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"CHAR\\\\\\\",\\\\n        \\\\\\\"nullable\\\\\\\": false,\\\\n        \\\\\\\"precision\\\\\\\": 3\\\\n      }\\\\n    }\\\\n  ]\\\\n}\\\"}\",\"lang\":\"opensearch_compounded_script\",\"params\":{\"utcTimestamp\":*}}}},\"sample_logs\":{\"top_hits\":{\"from\":0,\"size\":10,\"version\":false,\"seq_no_primary_term\":false,\"explain\":false,\"_source\":{\"includes\":[\"email\"],\"excludes\":[]}}}}}}}, requestedTotalSize=2147483647, pageSize=null, startFrom=0)])\n"
  }
}
