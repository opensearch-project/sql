calcite:
  logical: |
    LogicalSystemLimit(fetch=[10000], type=[QUERY_SIZE_LIMIT])
      LogicalProject(avg_age=[ROUND($2, 2)], state=[$0], city=[$1])
        LogicalAggregate(group=[{0, 1}], avg_age=[AVG($2)])
          LogicalProject(state=[$7], city=[$5], age=[$8])
            LogicalFilter(condition=[>($8, 30)])
              CalciteLogicalIndexScan(table=[[OpenSearch, opensearch-sql_test_index_account]])
  physical: |
    EnumerableCalc(expr#0..2=[{inputs}], expr#3=[2], expr#4=[ROUND($t2, $t3)], avg_age=[$t4], state=[$t0], city=[$t1])
      CalciteEnumerableIndexScan(table=[[OpenSearch, opensearch-sql_test_index_account]], PushDownContext=[[PROJECT->[city, state, age], FILTER->>($2, 30), AGGREGATION->rel#:LogicalAggregate.NONE.[](input=RelSubset#,group={0, 1},avg_age=AVG($2)), LIMIT->10000], OpenSearchRequestBuilder(sourceBuilder={"from":0,"size":0,"timeout":"1m","query":{"range":{"age":{"from":30,"to":null,"include_lower":false,"include_upper":true,"boost":1.0}}},"_source":{"includes":["city","state","age"],"excludes":[]},"aggregations":{"composite_buckets":{"composite":{"size":1000,"sources":[{"state":{"terms":{"field":"state.keyword","missing_bucket":true,"missing_order":"first","order":"asc"}}},{"city":{"terms":{"field":"city.keyword","missing_bucket":true,"missing_order":"first","order":"asc"}}}]},"aggregations":{"avg_age":{"avg":{"field":"age"}}}}}}, requestedTotalSize=2147483647, pageSize=null, startFrom=0)])
