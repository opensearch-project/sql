name: SQL Plugin Tests

on:
  workflow_dispatch:
    inputs:
      name:
        required: false
        type: string

run-name:
  ${{ inputs.name == '' && format('{0} @ {1}', github.ref_name, github.sha) || inputs.name }}

jobs:
  build:
    strategy:
      matrix:
        java:
          - 11
          - 17
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: ${{ matrix.java }}

    - name: Run tests
      id: tests
      run: |
        # Spotless
        ./gradlew :opensearch:spotlessCheck              || echo "* Spotless failed for opensearch" > report.log
        ./gradlew :sql:spotlessCheck                     || echo "* Spotless failed for sql" >> report.log
        ./gradlew :ppl:spotlessCheck                     || echo "* Spotless failed for ppl" >> report.log
        ./gradlew :core:spotlessCheck                    || echo "* Spotless failed for core" >> report.log
        ./gradlew :common:spotlessCheck                  || echo "* Spotless failed for common" >> report.log
        ./gradlew :legacy:spotlessCheck                  || echo "* Spotless failed for legacy" >> report.log
        ./gradlew :protocol:spotlessCheck                || echo "* Spotless failed for protocol" >> report.log
        ./gradlew :opensearch-sql-plugin:spotlessCheck   || echo "* Spotless failed for plugin" >> report.log
        ./gradlew :integ-test:spotlessCheck              || echo "* Spotless failed for integ-test" >> report.log
        # Unit tests
        ./gradlew :opensearch:test                        || echo "* Unit tests failed for opensearch" >> report.log
        ./gradlew :ppl:test                               || echo "* Unit tests failed for sql" >> report.log
        ./gradlew :sql:test                               || echo "* Unit tests failed for ppl" >> report.log
        ./gradlew :core:test                              || echo "* Unit tests failed for core" >> report.log
        ./gradlew :protocol:test                          || echo "* Unit tests failed for protocol" >> report.log
        ./gradlew :opensearch-sql-plugin:test             || echo "* Unit tests failed for plugin" >> report.log
        ./gradlew :legacy:test                            || echo "* Unit tests failed for legacy" >> report.log
        # jacoco
        ./gradlew :opensearch:jacocoTestCoverageVerification             || echo "* Jacoco failed for opensearch" >> report.log
        ./gradlew :ppl:jacocoTestCoverageVerification                    || echo "* Jacoco failed for sql" >> report.log
        ./gradlew :sql:jacocoTestCoverageVerification                    || echo "* Jacoco failed for ppl" >> report.log
        ./gradlew :core:jacocoTestCoverageVerification                   || echo "* Jacoco failed for core" >> report.log
        ./gradlew :protocol:jacocoTestCoverageVerification               || echo "* Jacoco failed for protocol" >> report.log
        ./gradlew :opensearch-sql-plugin:jacocoTestCoverageVerification  || echo "* Jacoco failed for plugin" >> report.log
        # Misc tests
        ./gradlew :integ-test:integTest                   || echo "* Integration test failed" >> report.log
        ./gradlew :doctest:doctest                        || echo "* Doctest failed" >> report.log
        ./scripts/bwctest.sh                              || echo "* Backward compatibility test failed" >> report.log

    - name: Verify test results
      run: |
        if [[ -e report.log ]]
        then
          echo "## FAILED TESTS :facepalm::warning::bangbang:" >> $GITHUB_STEP_SUMMARY
          cat report.log >> $GITHUB_STEP_SUMMARY
          exit 1
        fi

    - name: Upload test reports
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-reports-${{ matrix.entry.java }}
        path: |
          sql/build/reports/**
          ppl/build/reports/**
          core/build/reports/**
          common/build/reports/**
          opensearch/build/reports/**
          integ-test/build/reports/**
          protocol/build/reports/**
          legacy/build/reports/**
          plugin/build/reports/**
          doctest/build/testclusters/docTestCluster-0/logs/*
          integ-test/build/testclusters/*/logs/*
