{"calcite":{"logical":"LogicalSystemLimit(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC], fetch=[10000], type=[QUERY_SIZE_LIMIT])\n  LogicalSort(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC])\n    LogicalAggregate(group=[{0, 1}], count=[SUM($2)])\n      LogicalUnion(all=[false])\n        LogicalAggregate(group=[{0, 1}], actual_count=[SUM($2)])\n          LogicalProject(@timestamp=[CAST($0):TIMESTAMP(0) NOT NULL], host=[CASE(IS NOT NULL($3), $1, CASE(IS NULL($1), null:NULL, 'OTHER'))], count=[$2])\n            LogicalJoin(condition=[IS NOT DISTINCT FROM($1, $3)], joinType=[left])\n              LogicalProject(@timestamp=[$1], host=[$0], $f2_0=[$2])\n                LogicalAggregate(group=[{0, 1}], agg#0=[COUNT()])\n                  LogicalProject(host=[$4], $f2=[SPAN($1, 1, 'm')])\n                    CalciteLogicalIndexScan(table=[[OpenSearch, events]])\n              LogicalSort(sort0=[$1], dir0=[DESC], fetch=[10])\n                LogicalAggregate(group=[{1}], grand_total=[SUM($2)])\n                  LogicalFilter(condition=[IS NOT NULL($1)])\n                    LogicalProject(@timestamp=[$1], host=[$0], $f2_0=[$2])\n                      LogicalAggregate(group=[{0, 1}], agg#0=[COUNT()])\n                        LogicalProject(host=[$4], $f2=[SPAN($1, 1, 'm')])\n                          CalciteLogicalIndexScan(table=[[OpenSearch, events]])\n        LogicalProject(@timestamp=[CAST($0):TIMESTAMP(0) NOT NULL], host=[$1], count=[0])\n          LogicalJoin(condition=[true], joinType=[inner])\n            LogicalAggregate(group=[{0}])\n              LogicalProject(@timestamp=[$1])\n                LogicalAggregate(group=[{0, 1}], agg#0=[COUNT()])\n                  LogicalProject(host=[$4], $f2=[SPAN($1, 1, 'm')])\n                    CalciteLogicalIndexScan(table=[[OpenSearch, events]])\n            LogicalAggregate(group=[{0}])\n              LogicalProject($f0=[CASE(IS NOT NULL($3), $1, CASE(IS NULL($1), null:NULL, 'OTHER'))])\n                LogicalJoin(condition=[IS NOT DISTINCT FROM($1, $3)], joinType=[left])\n                  LogicalProject(@timestamp=[$1], host=[$0], $f2_0=[$2])\n                    LogicalAggregate(group=[{0, 1}], agg#0=[COUNT()])\n                      LogicalProject(host=[$4], $f2=[SPAN($1, 1, 'm')])\n                        CalciteLogicalIndexScan(table=[[OpenSearch, events]])\n                  LogicalSort(sort0=[$1], dir0=[DESC], fetch=[10])\n                    LogicalAggregate(group=[{1}], grand_total=[SUM($2)])\n                      LogicalFilter(condition=[IS NOT NULL($1)])\n                        LogicalProject(@timestamp=[$1], host=[$0], $f2_0=[$2])\n                          LogicalAggregate(group=[{0, 1}], agg#0=[COUNT()])\n                            LogicalProject(host=[$4], $f2=[SPAN($1, 1, 'm')])\n                              CalciteLogicalIndexScan(table=[[OpenSearch, events]])\n","physical":"EnumerableLimit(fetch=[10000])\n  EnumerableSort(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC])\n    EnumerableAggregate(group=[{0, 1}], count=[$SUM0($2)])\n      EnumerableUnion(all=[false])\n        EnumerableAggregate(group=[{0, 1}], actual_count=[$SUM0($2)])\n          EnumerableCalc(expr#0..4=[{inputs}], expr#5=[CAST($t0):TIMESTAMP(0) NOT NULL], expr#6=[IS NOT NULL($t3)], expr#7=[IS NULL($t1)], expr#8=[null:NULL], expr#9=['OTHER'], expr#10=[CASE($t7, $t8, $t9)], expr#11=[CASE($t6, $t1, $t10)], @timestamp=[$t5], host=[$t11], count=[$t2])\n            EnumerableMergeJoin(condition=[=($1, $3)], joinType=[left])\n              EnumerableSort(sort0=[$1], dir0=[ASC])\n                EnumerableCalc(expr#0..2=[{inputs}], @timestamp=[$t1], host=[$t0], $f2_0=[$t2])\n                  EnumerableAggregate(group=[{0, 1}], agg#0=[COUNT()])\n                    EnumerableCalc(expr#0..1=[{inputs}], expr#2=[1], expr#3=['m'], expr#4=[SPAN($t1, $t2, $t3)], host=[$t0], $f1=[$t4])\n                      CalciteEnumerableIndexScan(table=[[OpenSearch, events]], PushDownContext=[[PROJECT->[host, @timestamp]], OpenSearchRequestBuilder(sourceBuilder={\"from\":0,\"timeout\":\"1m\",\"_source\":{\"includes\":[\"host\",\"@timestamp\"],\"excludes\":[]}}, requestedTotalSize=2147483647, pageSize=null, startFrom=0)])\n              EnumerableSort(sort0=[$0], dir0=[ASC])\n                EnumerableLimit(fetch=[10])\n                  EnumerableSort(sort0=[$1], dir0=[DESC])\n                    EnumerableAggregate(group=[{0}], grand_total=[COUNT()])\n                      CalciteEnumerableIndexScan(table=[[OpenSearch, events]], PushDownContext=[[PROJECT->[host, @timestamp], FILTER->IS NOT NULL($0)], OpenSearchRequestBuilder(sourceBuilder={\"from\":0,\"timeout\":\"1m\",\"query\":{\"exists\":{\"field\":\"host\",\"boost\":1.0}},\"_source\":{\"includes\":[\"host\",\"@timestamp\"],\"excludes\":[]},\"sort\":[{\"_doc\":{\"order\":\"asc\"}}]}, requestedTotalSize=2147483647, pageSize=null, startFrom=0)])\n        EnumerableCalc(expr#0..1=[{inputs}], expr#2=[CAST($t0):TIMESTAMP(0) NOT NULL], expr#3=[0], @timestamp=[$t2], host=[$t1], count=[$t3])\n          EnumerableNestedLoopJoin(condition=[true], joinType=[inner])\n            CalciteEnumerableIndexScan(table=[[OpenSearch, events]], PushDownContext=[[AGGREGATION->rel#:LogicalAggregate.NONE.[](input=RelSubset#,group={1})], OpenSearchRequestBuilder(sourceBuilder={\"from\":0,\"size\":0,\"timeout\":\"1m\",\"aggregations\":{\"composite_buckets\":{\"composite\":{\"size\":1000,\"sources\":[{\"$f2\":{\"date_histogram\":{\"field\":\"@timestamp\",\"missing_bucket\":true,\"missing_order\":\"first\",\"order\":\"asc\",\"fixed_interval\":\"1m\"}}}]}}}}, requestedTotalSize=2147483647, pageSize=null, startFrom=0)])\n            EnumerableAggregate(group=[{0}])\n              EnumerableCalc(expr#0..2=[{inputs}], expr#3=[IS NOT NULL($t1)], expr#4=[IS NULL($t0)], expr#5=[null:NULL], expr#6=['OTHER'], expr#7=[CASE($t4, $t5, $t6)], expr#8=[CASE($t3, $t0, $t7)], $f0=[$t8])\n                EnumerableMergeJoin(condition=[=($0, $1)], joinType=[left])\n                  EnumerableSort(sort0=[$0], dir0=[ASC])\n                    EnumerableCalc(expr#0..1=[{inputs}], host=[$t0])\n                      EnumerableAggregate(group=[{0, 1}])\n                        EnumerableCalc(expr#0..1=[{inputs}], expr#2=[1], expr#3=['m'], expr#4=[SPAN($t1, $t2, $t3)], host=[$t0], $f1=[$t4])\n                          CalciteEnumerableIndexScan(table=[[OpenSearch, events]], PushDownContext=[[PROJECT->[host, @timestamp]], OpenSearchRequestBuilder(sourceBuilder={\"from\":0,\"timeout\":\"1m\",\"_source\":{\"includes\":[\"host\",\"@timestamp\"],\"excludes\":[]}}, requestedTotalSize=2147483647, pageSize=null, startFrom=0)])\n                  EnumerableSort(sort0=[$0], dir0=[ASC])\n                    EnumerableLimit(fetch=[10])\n                      EnumerableSort(sort0=[$1], dir0=[DESC])\n                        EnumerableAggregate(group=[{0}], grand_total=[COUNT()])\n                          CalciteEnumerableIndexScan(table=[[OpenSearch, events]], PushDownContext=[[PROJECT->[host, @timestamp], FILTER->IS NOT NULL($0)], OpenSearchRequestBuilder(sourceBuilder={\"from\":0,\"timeout\":\"1m\",\"query\":{\"exists\":{\"field\":\"host\",\"boost\":1.0}},\"_source\":{\"includes\":[\"host\",\"@timestamp\"],\"excludes\":[]},\"sort\":[{\"_doc\":{\"order\":\"asc\"}}]}, requestedTotalSize=2147483647, pageSize=null, startFrom=0)])\n"}}